#N canvas 572 23 634 707 12;
#X obj 198 489 <;
#X obj 166 131 &&;
#X obj 207 130 ||;
#X obj 366 489 &;
#X obj 404 489 |;
#X obj 121 489 >;
#X obj 161 489 >=;
#X obj 273 489 ==;
#X obj 235 489 <=;
#X floatatom 366 394 5 0 0 0 - - - 0;
#X obj 366 424 t b f;
#X floatatom 486 517 7 0 0 0 - - - 0;
#X obj 486 489 <<;
#X obj 444 489 >>;
#X obj 312 489 !=;
#X obj 22 10 >;
#X obj 50 10 >=;
#X obj 106 10 <=;
#X obj 78 10 <;
#X obj 135 10 ==;
#X obj 163 10 !=;
#X obj 416 575 == 0;
#X obj 469 575 < 5;
#X obj 191 10 div;
#X obj 191 34 mod;
#X floatatom 91 239 4 0 0 0 - - - 0;
#X floatatom 49 238 4 0 0 0 - - - 0;
#X floatatom 91 150 4 0 0 0 - - - 0;
#X obj 49 210 div;
#X obj 91 177 t b f;
#X obj 91 211 mod;
#X obj 95 648 +;
#X text 18 659 see also:;
#X floatatom 121 394 5 0 0 0 - - - 0;
#X obj 22 34 &&;
#X obj 50 34 ||;
#X obj 78 34 &;
#X obj 106 34 |;
#X obj 134 34 <<;
#X obj 163 34 >>;
#X floatatom 49 150 4 0 0 0 - - - 0;
#X obj 514 575 div 3;
#X obj 95 675 expr;
#X text 136 676 - evaluation expressions, f 25;
#X obj 396 648 sin;
#X text 432 649 (etc) - math functions;
#X text 130 647 (etc) - binary arithmetic operators;
#X obj 166 73 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 207 98 t b f;
#X text 241 137 note these expect integer input \, so 0.5 or -0.5 are truncated to '0' and not considered 'nonzero'.;
#X obj 438 248 %;
#X text 468 249 - deprecated;
#X floatatom 404 517 4 0 0 0 - - - 0;
#X floatatom 366 517 4 0 0 0 - - - 0;
#X floatatom 444 517 4 0 0 0 - - - 0;
#X floatatom 416 549 4 0 0 0 - - - 0;
#X floatatom 469 549 4 0 0 0 - - - 0;
#X floatatom 514 549 4 0 0 0 - - - 0;
#X floatatom 514 602 4 0 0 0 - - - 0;
#X text 220 22 - other binary operators;
#N canvas 720 222 578 305 reference 0;
#X obj 8 69 cnv 5 550 5 empty empty INLETS: 8 18 0 13 #202020 #000000 0;
#X obj 8 199 cnv 2 550 2 empty empty OUTLET: 8 12 0 13 #202020 #000000 0;
#X obj 8 239 cnv 2 550 2 empty empty ARGUMENT: 8 12 0 13 #202020 #000000 0;
#X obj 7 278 cnv 5 550 5 empty empty empty 8 18 0 13 #202020 #000000 0;
#X obj 8 153 cnv 1 550 1 empty empty 2nd: 8 12 0 13 #7c7c7c #000000 0;
#X text 139 108 bang - output the operation on the previously set values.;
#X text 132 127 float - value to the left side of operation and output., f 58;
#X text 133 162 float - value to the right side of operation., f 58;
#X text 134 209 float - the result of the operation., f 58;
#X obj 23 15 >;
#X obj 51 15 >=;
#X obj 107 15 <=;
#X obj 79 15 <;
#X obj 136 15 ==;
#X obj 164 15 !=;
#X obj 192 15 div;
#X obj 192 39 mod;
#X obj 23 39 &&;
#X obj 51 39 ||;
#X obj 79 39 &;
#X obj 107 39 |;
#X obj 135 39 <<;
#X obj 164 39 >>;
#X text 221 27 - other binary operators;
#X obj 8 103 cnv 1 550 1 empty empty 1st: 8 12 0 13 #7c7c7c #000000 0;
#X text 113 249 1) float - initialize value of right inlet (default 0)., f 58;
#X restore 510 31 pd reference;
#X text 443 31 click =>;
#X text 42 392 left input;
#X text 407 392 right input;
#X obj 6 63 cnv 1 620 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X obj 6 634 cnv 1 620 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X text 17 72 Logical operators ->;
#X text 411 673 updated for Pd version 0.47;
#X text 260 77 [&&] ('and') outputs 1 if both inputs are nonzero and 0 otherwise., f 47;
#X text 260 110 [||] ('or') outputs 1 if either one is nonzero.;
#X text 141 184 [div] and [mod] do integer division \, where [div] outputs the integer quotient and [mod] outputs the remainder (modulus). In addition the [%] operator (provided for back compatibility) is like [mod] but acts differently for negative inputs (and might act variously depending on CPU design)., f 62;
#X text 31 278 The bitwise operators [&] and [|] perform "and" and "or" on each bit of the inputs considered as binary numbers. the [>>] and [<<] objects perform left and right signed bit shifts. These also expect integer input and truncate float values., f 82;
#X text 31 328 Relational operators [>] (greater than) \, [==] (equals) \, [!=] (not equals) etc. output 1 or 0 depending on whether the relation is true or false. Unlike the previous ones \, these can deal with float input., f 82;
#X text 45 558 All of these objects can have a creation argument to initialize the right inlet. They also take a bang message to evaluate the operation with the previously set values., f 49;
#X obj 207 73 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 166 156 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 207 156 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 121 517 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 198 517 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 161 517 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 273 517 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 235 517 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 312 517 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 416 602 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 469 602 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 1;
#X connect 0 0 78 0;
#X connect 1 0 75 0;
#X connect 2 0 76 0;
#X connect 3 0 53 0;
#X connect 4 0 52 0;
#X connect 5 0 77 0;
#X connect 6 0 79 0;
#X connect 7 0 80 0;
#X connect 8 0 81 0;
#X connect 9 0 10 0;
#X connect 10 0 5 0;
#X connect 10 0 14 0;
#X connect 10 0 13 0;
#X connect 10 0 12 0;
#X connect 10 0 8 0;
#X connect 10 0 7 0;
#X connect 10 0 6 0;
#X connect 10 0 4 0;
#X connect 10 0 3 0;
#X connect 10 0 0 0;
#X connect 10 1 3 1;
#X connect 10 1 4 1;
#X connect 10 1 12 1;
#X connect 10 1 13 1;
#X connect 10 1 5 1;
#X connect 10 1 6 1;
#X connect 10 1 7 1;
#X connect 10 1 14 1;
#X connect 10 1 8 1;
#X connect 10 1 0 1;
#X connect 12 0 11 0;
#X connect 13 0 54 0;
#X connect 14 0 82 0;
#X connect 21 0 83 0;
#X connect 22 0 84 0;
#X connect 27 0 29 0;
#X connect 28 0 26 0;
#X connect 29 0 30 0;
#X connect 29 0 28 0;
#X connect 29 1 30 1;
#X connect 29 1 28 1;
#X connect 30 0 25 0;
#X connect 33 0 3 0;
#X connect 33 0 4 0;
#X connect 33 0 12 0;
#X connect 33 0 13 0;
#X connect 33 0 5 0;
#X connect 33 0 6 0;
#X connect 33 0 7 0;
#X connect 33 0 8 0;
#X connect 33 0 0 0;
#X connect 33 0 14 0;
#X connect 40 0 28 0;
#X connect 40 0 30 0;
#X connect 41 0 58 0;
#X connect 47 0 1 0;
#X connect 47 0 2 0;
#X connect 48 0 1 0;
#X connect 48 0 2 0;
#X connect 48 1 2 1;
#X connect 48 1 1 1;
#X connect 55 0 21 0;
#X connect 56 0 22 0;
#X connect 57 0 41 0;
#X connect 74 0 48 0;
