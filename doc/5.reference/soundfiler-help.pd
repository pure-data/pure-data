#N canvas 183 50 1039 619 12;
#N canvas 0 22 450 300 (subpatch) 0;
#X array sample 44100 float 2;
#X coords 0 1 44100 -1 250 100 1 0 0;
#X restore 269 273 graph;
#X obj 60 340 soundfiler;
#X floatatom 60 369 7 0 0 0 - - - 12;
#X obj 163 580 tabwrite~;
#X obj 237 580 tabread4~;
#X obj 310 580 tabplay~;
#X obj 434 580 writesf~;
#X obj 376 580 readsf~;
#X text 38 579 See also:;
#X text 256 176 read a file to zero or more arrays, f 35;
#X obj 40 15 soundfiler;
#X text 806 579 updated for Pd version 0.51;
#X obj 115 580 array;
#X listbox 127 369 16 0 0 0 - - - 0;
#X obj 6 51 cnv 1 1025 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X text 916 14 <= click;
#N canvas 540 87 632 371 reference 0;
#X obj 8 52 cnv 5 610 5 empty empty INLET: 8 18 0 13 #202020 #000000 0;
#X obj 8 182 cnv 2 610 2 empty empty OUTLETS: 8 12 0 13 #202020 #000000 0;
#X obj 8 301 cnv 2 610 2 empty empty ARGUMENTS: 8 12 0 13 #202020 #000000 0;
#X obj 7 335 cnv 5 610 5 empty empty empty 8 18 0 13 #202020 #000000 0;
#X obj 7 247 cnv 1 610 1 empty empty 2nd: 8 12 0 13 #7c7c7c #000000 0;
#X obj 7 210 cnv 1 610 1 empty empty 1st: 8 12 0 13 #7c7c7c #000000 0;
#X text 109 254 list -;
#X text 102 219 float - number of samples (when reading a file)., f 58;
#X text 75 66 read <list> -;
#X text 174 66 sets a filename to open and optionally one or more arrays to load channels. Optional flags: -wave \, -aiff \, -caf \, -next \, -skip <float> \, -maxsize <float> \, -ascii \, -raw <list>.;
#X text 68 117 write <list> -;
#X obj 30 15 soundfiler;
#X text 234 309 NONE;
#X text 112 15 - import/export soundfiles to/from arrays.;
#X text 174 116 sets a filename to write and one or more arrays to specify channels. Optional flags: -wave \, -aiff \, -caf \, -ascii \, -next \, -big \, -little \, -skip <float> \, -nframes <float> \, -normalize \, -rate <float>.;
#X text 157 254 sample rate \, header size \, number of channels \, bytes per sample & endianness ('b' or 'l')., f 51;
#X restore 822 15 pd reference;
#X text 120 14 - import/export soundfiles to/from arrays;
#X msg 34 176 read ../sound/bell.aiff sample;
#X msg 60 211 read -resize ../sound/bell.aiff sample;
#X text 29 69 The [soundfiler] object loads files into arrays and also saves arrays into files. The soundfiles may contain uncompressed 2- or 3-byte integer ("pcm") or 4-byte floating point samples in wave \, aiff \, caf and next formats. Additionally \, [soundfiler] also deals with ascii text files., f 72;
#X text 340 203 optionally resize array to fit the whole file, f 23;
#X text 37 144 Basic read/write example:;
#N canvas 791 194 575 345 Dealing_with_"\$0" 0;
#X obj 273 171 array define \$0-x;
#X obj 153 202 f \$0;
#X obj 153 263 soundfiler;
#X floatatom 153 289 7 0 0 0 - - - 0;
#X msg 153 231 read -resize ../sound/bell.aiff \$1-x;
#X obj 153 176 loadbang;
#X text 405 172 <- array with local name, f 13;
#X text 36 33 '\$0' - the patch ID number used to force locality in Pd - is widely used in send/receive names as well as array names. This is especially useful in abstractions so each copy has local names instead of global., f 70;
#X text 36 86 Here we use "\$0" in an array name in [array define] and if you need to set the array name in a message you can load '\$0' in a float object and send it to it., f 70;
#X connect 1 0 4 0;
#X connect 2 0 3 0;
#X connect 4 0 2 0;
#X connect 5 0 1 0;
#X restore 788 376 pd Dealing_with_"\$0";
#X text 678 353 open subpatch to see how to deal with '\$0', f 28;
#X text 29 501 The 'write' message takes a filename to save to and one or more arrays (one for each channel)., f 72;
#X text 29 422 The 'read' message takes a file to load and one or more arrays to load into (in the case the file has more than one channel). The number of channels of the soundfile need not match the number of arrays given to read (extras channels are dropped and unsupplied channels are zeroed out in the extra arrays)., f 72;
#X text 577 243 Note that if no array name is given to read to \, no samples are read but you get the number of samples in the file on the left outlet and the info on the right outlet anyway., f 62;
#X text 577 300 Also note that the number of channels is limited to 64 for both reading and writting., f 62;
#N canvas 85 86 1235 552 read-write-flags 0;
#X text 27 83 -resize (resizes arrays to the size of the sound file), f 62;
#N canvas 0 22 450 300 (subpatch) 0;
#X array array1 78003 float 2;
#X coords 0 1 78003 -1 325 120 1 0 0;
#X restore 887 260 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array array2 78003 float 2;
#X coords 0 1 78003 -1 325 120 1 0 0;
#X restore 887 404 graph;
#X obj 622 447 soundfiler;
#X text 27 23 Flags for 'read' message:, f 62;
#X text 27 347 Flags for 'write' message:, f 69;
#X text 27 101 -maxsize <float> (maximum number of samples to resize to), f 62;
#X text 48 139 [soundfiler] can figure out which of the known soundfile formats the file belongs to or override all header and type information using the "-raw" flag \, which causes all header and type information to be ignored. Endianness is "l" ("little") for Intel machines or "b" ("big") for older PPC Macintoshes. You can give "n" (natural) to take the byte order your machine prefers., f 70;
#X text 27 231 -ascii (read a file containing ascii numbers), f 73;
#X text 48 251 This may only be combined with '-resize'. Newlines in the file are ignored \, non-numeric fields are replaced by zero. If multiple arrays are specified \, the first elements of each array should come first in the file \, followed by all the second elements and so on (interleaved)., f 70;
#X text 27 47 -wave \, -aiff \, -caf \, -next (soundfile format), f 62;
#X text 1056 131 read a file overriding the header, f 23;
#X text 904 169 read from an ascii file;
#X listbox 689 495 17 0 0 0 - - - 0;
#X msg 625 138 read -resize -raw 128 2 2 b ../sound/bell.aiff array1 array2;
#X msg 651 192 read -ascii -resize table.txt array1 array2;
#X floatatom 622 495 6 0 0 0 - - - 0;
#X obj 586 58 openpanel;
#X obj 586 23 bng 23 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X obj 672 289 savepanel;
#X obj 672 254 bng 23 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X text 82 500 * note that arrays whose values exceed the -1 to 1 range are automatically normalized, f 42;
#X text 27 442 -bytes <float >(bytes per sample: 2 \, 3 \, or 4 \, default: 2), f 69;
#X text 27 461 -rate <float> (sample rate \, default Pd's running sample rate), f 69;
#X text 27 424 -nframes <float> (maximum points to write \, default whole array), f 69;
#X text 27 405 -skip <float> (number of points to skip in array \, default 0), f 69;
#X text 27 65 -skip <float> (sample frames to skip in the file as an offset), f 62;
#X text 27 120 -raw <f \, f \, f \, s> (header size \, channels \, bytes per sample \, endianness), f 73;
#X text 27 367 -wave \, -aiff \, -caf \, -next \, -ascii (soundfile format \, default: 'wave'), f 69;
#X text 27 386 -big \, -little (sample endianness \, default 'little'), f 69;
#X text 27 480 -normalize * (normalize file to '1'), f 69;
#X msg 672 317 write \$1 array1 array2;
#X msg 586 86 read -resize \$1 array1 array2;
#X msg 607 113 read -maxsize 44100 -aiff ../sound/bell.aiff array1 array2;
#X text 846 89 set max size and extension;
#X msg 642 169 read -ascii -resize table.txt array1;
#N canvas 411 132 607 507 more-writting-examples 0;
#X msg 171 364 write foo1.txt array1;
#X obj 113 451 outlet;
#X text 223 191 write a mono file and set number of samples, f 22;
#X obj 144 202 savepanel;
#X obj 144 167 bng 23 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X msg 144 237 write -nframes 10000 \$1 array1;
#X obj 113 78 savepanel;
#X obj 113 43 bng 23 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X msg 113 113 write -next -bytes 4 \$1 array1 array2;
#X text 192 38 Write a stereo file with a 4 byte resolution and in the 'next' format (so when typing into the savepannel dialog you should not set the file extension), f 47;
#X obj 171 322 savepanel;
#X obj 171 287 bng 23 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X text 251 304 write to an ascii file (set the file extension to '.txt'), f 31;
#X connect 0 0 1 0;
#X connect 3 0 5 0;
#X connect 4 0 3 0;
#X connect 5 0 1 0;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 8 0 1 0;
#X connect 10 0 0 0;
#X connect 11 0 10 0;
#X restore 681 383 pd more-writting-examples;
#X text 698 256 Write a stereo fie;
#X text 618 24 Choose file to save to or read from in your hard disk;
#X connect 3 0 16 0;
#X connect 3 1 13 0;
#X connect 14 0 3 0;
#X connect 15 0 3 0;
#X connect 17 0 32 0;
#X connect 18 0 17 0;
#X connect 19 0 31 0;
#X connect 20 0 19 0;
#X connect 31 0 3 0;
#X connect 32 0 3 0;
#X connect 33 0 3 0;
#X connect 35 0 3 0;
#X connect 36 0 3 0;
#X restore 756 497 pd read-write-flags & more examples;
#X f 19;
#X text 577 149 When loading a file \, the left outlet sends the number of samples the file contains if the array is equal or greater in size. If you're loading a file into an array that is smaller \, the number or samples is clipped to the array size and you probably want to use the -resize flag to resize the array size to the file size., f 62;
#X text 577 413 Both 'read' and 'write' messages also take optional flags for configuration. In the basic example to the left we have the '-resize' flag in the read message that resizes the array to the file size. See more about flags and advanced examples in the subpatch below., f 62;
#X obj 6 562 cnv 1 1025 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X obj 503 580 openpanel;
#X obj 576 580 savepanel;
#X text 577 69 At loading or writting a file \, the left outlet outputs the number of samples and the right outlet sends information as a list \, namely: Sample Rate \, Header Size \, Number of Channels \, Bytes per Sample & Endianness ("b" for "big" or "l" for "little")., f 62;
#X text 126 389 info <sr \, header \, channels \, bytes \, endianness>;
#X text 44 389 # samples;
#X obj 84 280 savepanel;
#X obj 84 248 bng 23 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X msg 84 308 write \$1 sample;
#X text 112 249 write to a file;
#X connect 1 0 2 0;
#X connect 1 1 13 0;
#X connect 18 0 1 0;
#X connect 19 0 1 0;
#X connect 38 0 40 0;
#X connect 39 0 38 0;
#X connect 40 0 1 0;
