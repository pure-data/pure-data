#N canvas 516 38 534 514 12;
#X msg 120 187 2;
#X obj 57 126 phasor~ 1000;
#X text 119 155 bang prints one vector;
#X obj 25 14 print~;
#X text 21 474 see also:;
#X obj 93 475 print;
#X msg 355 177 \; pd dsp \$1;
#N canvas 657 103 573 246 reference 0;
#X obj 18 52 cnv 5 550 5 empty empty INLET: 8 18 0 13 #202020 #000000 0;
#X obj 18 141 cnv 2 550 2 empty empty OUTLET: 8 12 0 13 #202020 #000000 0;
#X obj 18 178 cnv 2 550 2 empty empty ARGUMENT: 8 12 0 13 #202020 #000000 0;
#X obj 17 215 cnv 5 550 5 empty empty empty 8 18 0 13 #202020 #000000 0;
#X text 146 151 NONE, f 5;
#X obj 39 15 print~;
#X text 124 88 bang - print one block on terminal window.;
#X text 118 108 float - sets and prints number of blocks on terminal window.;
#X text 126 189 1) symbol - symbol prefix (default: "print~").;
#X text 92 15 - print out one or more "blocks".;
#X text 89 67 signal(s) - input to print on terminal window.;
#X restore 359 13 pd reference;
#X text 457 14 <= click;
#X obj 9 47 cnv 1 520 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X obj 9 465 cnv 1 520 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X obj 144 475 block~;
#X obj 94 155 bng 19 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X text 41 66 The [print~] object takes a signal input and prints one or more blocks (or 'vectors') out when you send it a bang or a number. By default a block is 64 samples long., f 63;
#X obj 94 260 print~ phasor;
#X floatatom 120 219 4 0 0 0 - - - 0;
#X text 158 184 float sets number of successive vectors to print, f 20;
#X text 200 252 optional symbol argument gives it a different prefix (default "print~")., f 38;
#X text 78 14 - print out one or more "blocks";
#X obj 355 142 set-dsp-tgl;
#X text 386 146 DSP on/off;
#X text 317 473 Updated for Pd version 0.56;
#X obj 199 475 snapshot~;
#X obj 76 347 snake~ in;
#X obj 76 315 noise~;
#X obj 136 316 osc~ 1;
#X obj 98 386 bng 19 250 50 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000;
#X obj 76 423 print~ Multichannel-Connections;
#X text 219 320 Multichannel connections are supported \, in which case we have blocks for each channel described as "channel 1" \, "channel 2" and so on..., f 29;
#X connect 0 0 15 0;
#X connect 1 0 14 0;
#X connect 12 0 14 0;
#X connect 15 0 14 0;
#X connect 19 0 6 0;
#X connect 23 0 27 0;
#X connect 24 0 23 0;
#X connect 25 0 23 1;
#X connect 26 0 27 0;
