#N canvas 459 23 661 714 12;
#X floatatom 148 444 4 0 0 0 - - - 0;
#X text 22 682 see also:;
#X obj 97 683 netsend;
#X obj 46 444 print tcp;
#X obj 52 561 print udp;
#X obj 52 533 netreceive -u 3001;
#X text 186 324 creation arguments:;
#X text 187 343 optional -u flag for UDP;
#X text 187 361 optional -b flag for binary;
#X text 187 397 optional port number;
#X obj 219 536 netreceive -b 3002;
#X obj 219 564 print tcp-binary;
#X obj 403 564 print udp-binary;
#X msg 59 265 listen 0;
#X text 136 238 listen message to set or change port;
#X text 128 265 (0 or negative number to close);
#X msg 70 319 send foo \$1;
#X floatatom 70 295 4 0 0 0 - - - 0;
#X floatatom 219 487 4 0 0 0 - - - 0;
#X text 25 598 An old (pre-0.45) calling convention is provided for
compatibility \, port number and following "0" or "1" for TCP or UDP
respectively:, f 67;
#X text 50 491 Other examples:;
#X text 520 594 (UDP port 3004);
#X obj 403 536 netreceive -u -b -f 3003;
#X obj 568 564 print from;
#X text 37 186 SECURITY NOTE: Don't publish the port number of your
netreceive unless you wouldn't mind other people being able to send
you messages., f 84;
#X obj 521 620 netreceive 3004 1;
#X msg 219 511 4 5 6 \$1;
#N canvas 683 168 526 506 IP 0;
#X obj 23 421 print udp-hostname;
#X text 284 279 IPv4 multicast;
#X text 269 311 IPv6 multicast;
#X obj 23 383 netreceive -u -f;
#X obj 170 421 print from-hostname;
#X msg 124 345 listen 0;
#X msg 96 310 listen 3005 ff00::114;
#X msg 76 279 listen 3005 239.200.200.200;
#X msg 46 214 listen 3005 ::1;
#X msg 37 179 listen 3005 127.0.0.1;
#X msg 57 247 listen 3005 localhost;
#X text 202 179 IPv4 messages;
#X obj 325 395 netreceive 3005 ::1;
#X obj 325 422 print tcp-hostname;
#X text 324 358 listen for IPv6 TCP messages on localhost, f 22;
#X msg 23 146 listen 3005;
#X text 113 145 any IPv4 and IPv6 messages (default);
#X text 167 215 IPv6 messages *);
#X text 219 239 IPv4 and/or IPv6 messages (system dependent!), f 26
;
#X text 23 451 *) On some systems you can also receive IPv4 messages.
This certainly doesn't work on Windows!, f 54;
#X text 21 115 For backwards compatibility \, hostname resolution favors
IPv4 results., f 69;
#X text 21 13 As of Pd 0.51+ \, [netreceive] accepts a hostname which
can be a UDP multicast address or a network interface. Note that you
can't specify a remote host - that is the job of a firewall., f 61
;
#X text 20 63 By default \, [netreceive] listens on all IPv4 and IPv6
interfaces \, but you can restrict it to a specific interface \, e.g.
"127.0.0.1" to only receive IPv4 messages from the same computer.,
f 66;
#X connect 3 0 0 0;
#X connect 3 1 4 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 7 0 3 0;
#X connect 8 0 3 0;
#X connect 9 0 3 0;
#X connect 10 0 3 0;
#X connect 12 0 13 0;
#X connect 15 0 3 0;
#X restore 434 460 pd IP version and multicast;
#X text 187 379 optional -f flag for from address & port outlet (0.51+)
;
#X text 187 416 optional UDP hostname or multicast address (0.51+)
;
#X text 289 511 lists work like "send" (Pd 0.51+);
#X text 445 682 updated for Pd version 0.51.;
#X text 26 635 As of 0.51 \, Pd supports IPv6 addresses.;
#X obj 23 8 netreceive;
#X text 107 8 - listen for incoming messages from network;
#X obj 7 36 cnv 1 650 1 empty empty empty 8 12 0 13 #000000 #000000
0;
#X text 567 7 <= click;
#N canvas 531 101 737 491 reference 0;
#X obj 8 39 cnv 5 720 5 empty empty INLET: 8 18 0 13 #202020 #000000
0;
#X obj 8 153 cnv 2 720 2 empty empty OUTLETS: 8 12 0 13 #202020 #000000
0;
#X obj 8 325 cnv 2 720 2 empty empty ARGUMENTS: 8 12 0 13 #202020 #000000
0;
#X obj 7 467 cnv 5 720 5 empty empty empty 8 18 0 13 #202020 #000000
0;
#X obj 7 179 cnv 1 720 1 empty empty 1st: 8 12 0 13 #9f9f9f #000000
0;
#X obj 7 210 cnv 1 720 1 empty empty 2nd: 8 12 0 13 #9f9f9f #000000
0;
#X obj 7 348 cnv 1 720 1 empty empty flags: 8 12 0 13 #9f9f9f #000000
0;
#X obj 26 9 netreceive;
#X text 110 9 - listen for incoming messages from network;
#X text 72 55 listen <float \, symbol> -;
#X text 247 54 a number sets or changes the port number (0 or negative
closes the port). Optional symbol is a hostname which can be a UDP
multicast address or a network interface., f 64;
#X text 120 105 send <anything> -;
#X text 170 182 anything - messages sent from connected netsend objects.
, f 57;
#X text 187 354 -u: sets UDP connection (default TCP)., f 52;
#X obj 7 415 cnv 1 720 1 empty empty args: 8 12 0 13 #9f9f9f #000000
0;
#X text 198 421 1) float - port number, f 45;
#X text 191 439 2) symbol - UDP hostname or multicast address.;
#X text 191 237 float - number of open connections for TCP connections.
, f 57;
#X text 198 297 list -;
#X text 52 214 (TCP connection only);
#X obj 7 265 cnv 1 720 1 empty empty rightmost: 8 12 0 13 #9f9f9f #000000
0;
#X text 96 269 (if the -f flag is given);
#X text 246 297 address and port., f 49;
#X text 187 390 -f: flag for from address & port outlet., f 52;
#X text 197 125 list -;
#X text 247 125 works like 'send'., f 64;
#X text 247 105 sends messages back to connected netsend objects.,
f 64;
#X text 187 372 -b: sets to binary mode (default 'FUDI')., f 52;
#X restore 473 8 pd reference;
#X obj 7 671 cnv 1 650 1 empty empty empty 8 12 0 13 #000000 #000000
0;
#X msg 46 237 listen 3000;
#X obj 46 348 netreceive 3000;
#X text 107 295 "send" sends back to connected netsend objects;
#X text 37 45 The [netreceive] object opens a socket for TCP ("stream")
or UDP ("datagram") network reception on a specified port. If using
TCP \, an outlet gives you the number of [netsend] objects (or other
compatible clients) that have opened connections here., f 85;
#X text 182 445 <-- number of open connections;
#X text 37 92 By default the messages are ASCII text messages compatible
with Pd (i.e. \, numbers and symbols terminated with a semicolon --
the "FUDI" protocol). The "-b" flag specifies binary messages instead
\, which appear in Pd as lists of numbers from 0 to 255 (You could
use this for OSC messages \, for example.), f 85;
#X obj 237 683 fudiformat;
#X text 37 153 There are some possibilities for intercommunication
with other programs... see the help for [netsend]., f 85;
#X obj 160 683 oscformat;
#X connect 5 0 4 0;
#X connect 10 0 11 0;
#X connect 13 0 40 0;
#X connect 16 0 40 0;
#X connect 17 0 16 0;
#X connect 18 0 26 0;
#X connect 22 0 12 0;
#X connect 22 1 23 0;
#X connect 26 0 10 0;
#X connect 39 0 40 0;
#X connect 40 0 3 0;
#X connect 40 1 0 0;
