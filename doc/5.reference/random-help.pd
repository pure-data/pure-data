#N canvas 531 40 481 416 12;
#X floatatom 137 244 5 0 0 0 - - - 0;
#X floatatom 84 302 4 0 0 0 - - - 0;
#X msg 103 209 seed 123;
#X text 108 176 bang for output;
#X text 180 245 inlet to reset the range;
#X text 151 274 argument to initialize the range;
#X text 276 378 updated for Pd version 0.33;
#X obj 27 13 random;
#X text 81 12 - pseudo random integers;
#X text 9 379 see also:;
#X obj 82 378 expr;
#X obj 10 42 cnv 1 460 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#N canvas 722 116 574 286 reference 0;
#X obj 8 52 cnv 5 550 5 empty empty INLETS: 8 18 0 13 #202020 #000000 0;
#X obj 8 184 cnv 2 550 2 empty empty OUTLET: 8 12 0 13 #202020 #000000 0;
#X obj 8 221 cnv 2 550 2 empty empty ARGUMENT: 8 12 0 13 #202020 #000000 0;
#X obj 7 258 cnv 5 550 5 empty empty empty 8 18 0 13 #202020 #000000 0;
#X obj 8 145 cnv 1 550 1 empty empty 2nd: 8 12 0 13 #7c7c7c #000000 0;
#X obj 8 85 cnv 1 550 1 empty empty 1st: 8 12 0 13 #7c7c7c #000000 0;
#X obj 40 16 random;
#X text 94 15 - pseudo random integers.;
#X text 98 92 bang - generate a random integer number., f 62;
#X text 147 113 set a seed value for repeatable random numbers., f 55;
#X text 143 155 float - set the range., f 49;
#X text 143 194 float - the generated random number., f 49;
#X text 143 232 1) float - initial range value (default 1)., f 49;
#X text 42 113 seed <float> -;
#X restore 290 12 pd reference;
#X text 384 12 <= click;
#X obj 10 361 cnv 1 460 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X obj 84 274 random 5;
#X obj 84 177 bng 19 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X obj 84 330 print random;
#X text 175 209 set the seed \, see -->;
#X obj 121 378 noise~;
#X obj 172 378 array random;
#X text 24 117 WARNING: Nothing is known about the quality of this pseudo random number generator. It isn't any standard one!, f 60;
#N canvas 725 64 467 460 more 0;
#X text 54 196 If you don't supply a seed each [random] object gets its own seed., f 52;
#X floatatom 83 381 4 0 0 0 - - - 0;
#X obj 83 264 bng 19 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X obj 83 412 print random;
#X msg 107 310 seed 1.54312e+07;
#X obj 83 353 random 10;
#X floatatom 267 381 4 0 0 0 - - - 0;
#X obj 267 262 bng 19 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X obj 267 412 print random;
#X msg 291 310 seed 1.54312e+07;
#X obj 267 353 random 10;
#X text 54 119 Seeds are kept locally \, which means that if two [random] objects are seeded the same they will have the same output. Conversely \, you can seed the same [random] object twice with the same seed to repeat the output., f 52;
#X text 54 40 Pseudo random number generators aren't true random number generators. Instead \, an algorithm is used to provide a sequence of numbers that seems random. The same sequence can be reproduced if you set a "seed" value \, which can be any integer number., f 52;
#X connect 1 0 3 0;
#X connect 2 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 1 0;
#X connect 6 0 8 0;
#X connect 7 0 10 0;
#X connect 9 0 10 0;
#X connect 10 0 6 0;
#X restore 333 204 pd more about seed;
#X f 10;
#X text 24 60 [random] outputs pseudo random integers from 0 to N-1 where N is the creation argument (5 in the example below.) You can specify a seed if you wish in order reproduce the sequence.;
#X connect 0 0 15 1;
#X connect 1 0 17 0;
#X connect 2 0 15 0;
#X connect 15 0 1 0;
#X connect 16 0 15 0;
