#N canvas 531 40 518 431 12;
#X floatatom 175 255 5 0 0 0 - - - 0;
#X floatatom 122 313 4 0 0 0 - - - 0;
#X msg 149 223 seed 123;
#X text 189 285 argument to initialize the range;
#X obj 27 13 random;
#X text 81 12 - pseudo random integers;
#X text 15 391 see also:;
#X obj 88 390 expr;
#X obj 10 45 cnv 1 500 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#N canvas 598 137 574 306 reference 0;
#X obj 8 52 cnv 5 550 5 empty empty INLETS: 8 18 0 13 #202020 #000000 0;
#X obj 8 204 cnv 2 550 2 empty empty OUTLET: 8 12 0 13 #202020 #000000 0;
#X obj 8 241 cnv 2 550 2 empty empty ARGUMENT: 8 12 0 13 #202020 #000000 0;
#X obj 7 278 cnv 5 550 5 empty empty empty 8 18 0 13 #202020 #000000 0;
#X obj 8 165 cnv 1 550 1 empty empty 2nd: 8 12 0 13 #7c7c7c #000000 0;
#X obj 8 85 cnv 1 550 1 empty empty 1st: 8 12 0 13 #7c7c7c #000000 0;
#X obj 40 16 random;
#X text 94 15 - pseudo random integers.;
#X text 108 92 bang - generate a random integer number., f 60;
#X text 157 134 set a seed value for repeatable random numbers., f 53;
#X text 143 175 float - set the range., f 49;
#X text 143 214 float - the generated random number., f 49;
#X text 143 252 1) float - initial range value (default 1)., f 49;
#X text 52 134 seed <float> -;
#X text 101 112 float - set the range and output a random value., f 61;
#X restore 331 12 pd reference;
#X text 425 12 <= click;
#X obj 122 285 random 5;
#X obj 122 164 bng 19 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X obj 122 341 print random;
#X text 221 223 set the seed \, see -->;
#X obj 127 390 noise~;
#X obj 178 390 array random;
#X text 38 115 WARNING: Nothing is known about the quality of this pseudo random number generator. It isn't any standard one!, f 60;
#N canvas 725 64 467 460 more 0;
#X text 54 196 If you don't supply a seed each [random] object gets its own seed., f 52;
#X floatatom 83 381 4 0 0 0 - - - 0;
#X obj 83 264 bng 19 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X obj 83 412 print random;
#X msg 107 310 seed 1.54312e+07;
#X obj 83 353 random 10;
#X floatatom 267 381 4 0 0 0 - - - 0;
#X obj 267 262 bng 19 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X obj 267 412 print random;
#X msg 291 310 seed 1.54312e+07;
#X obj 267 353 random 10;
#X text 54 119 Seeds are kept locally \, which means that if two [random] objects are seeded the same they will have the same output. Conversely \, you can seed the same [random] object twice with the same seed to repeat the output., f 52;
#X text 54 40 Pseudo random number generators aren't true random number generators. Instead \, an algorithm is used to provide a sequence of numbers that seems random. The same sequence can be reproduced if you set a "seed" value \, which can be any integer number., f 52;
#X connect 1 0 3 0;
#X connect 2 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 1 0;
#X connect 6 0 8 0;
#X connect 7 0 10 0;
#X connect 9 0 10 0;
#X connect 10 0 6 0;
#X restore 379 218 pd more about seed;
#X f 10;
#X text 38 60 [random] outputs pseudo random integers from 0 to N-1 where N is the creation argument (5 in the example below.) You can specify a seed if you wish in order reproduce the sequence.;
#X text 146 163 bang to output a random number;
#X floatatom 136 192 5 1 100 0 - - - 0;
#X text 176 190 number to set range and output;
#X text 218 256 inlet to set the range;
#X text 292 389 updated for Pd version 0.56-0;
#X obj 10 374 cnv 1 500 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X connect 0 0 11 1;
#X connect 1 0 13 0;
#X connect 2 0 11 0;
#X connect 11 0 1 0;
#X connect 12 0 11 0;
#X connect 21 0 11 0;
