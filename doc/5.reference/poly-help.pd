#N canvas 391 72 567 557 12;
#X declare -stdpath ./;
#X text 16 523 see also:;
#X obj 29 16 poly;
#X obj 94 523 makenote;
#X obj 111 327 poly 4 1;
#X msg 223 285 stop;
#X msg 213 259 clear;
#X text 68 16 - MIDI-style polyphonic voice allocator;
#X listbox 104 387 13 0 0 0 - - - 0;
#X obj 104 357 pack f f f;
#X text 258 260 clear memory;
#X text 261 282 flush hanging note on messages, f 17;
#X obj 9 50 cnv 1 550 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#N canvas 692 146 472 518 reference 0;
#X obj 8 52 cnv 5 450 5 empty empty INLETS: 8 18 0 13 #202020 #000000 0;
#X obj 8 314 cnv 2 450 2 empty empty OUTLET: 8 12 0 13 #202020 #000000 0;
#X obj 8 435 cnv 2 450 2 empty empty ARGUMENTS: 8 12 0 13 #202020 #000000 0;
#X obj 7 492 cnv 5 450 5 empty empty empty 8 18 0 13 #202020 #000000 0;
#X obj 7 277 cnv 1 450 1 empty empty 2nd: 8 12 0 13 #7c7c7c #000000 0;
#X obj 7 85 cnv 1 450 1 empty empty 1st: 8 12 0 13 #7c7c7c #000000 0;
#X obj 27 18 poly;
#X text 66 18 - MIDI-style polyphonic voice allocator.;
#X text 111 93 float - MIDI pitch value., f 40;
#X text 111 131 clear -;
#X text 167 131 clear memory., f 32;
#X text 118 149 stop -;
#X text 167 149 flush hanging note on messages., f 32;
#X text 132 284 float - set velocity value., f 40;
#X obj 7 368 cnv 1 450 1 empty empty 2nd: 8 12 0 13 #7c7c7c #000000 0;
#X obj 7 338 cnv 1 450 1 empty empty 1st: 8 12 0 13 #7c7c7c #000000 0;
#X text 132 346 float - the voice number., f 40;
#X obj 7 398 cnv 1 450 1 empty empty 3rd: 8 12 0 13 #7c7c7c #000000 0;
#X text 111 445 1) float - number of voices (default 1)., f 43;
#X text 111 463 2) float - non-zero sets to voice stealing.;
#X text 131 406 float - note velocity., f 40;
#X text 131 376 float - note pitch., f 40;
#X text 55 167 steal <float> -;
#X text 167 167 non-zero sets voice stealing mode on \, zero sets it off., f 37;
#X text 55 233 stack <float> -;
#X text 48 113 resize <float> - resize the number of voices., f 49;
#X text 41 201 sustain <float> -;
#X text 167 200 non-zero sets sustain mode on \, zero sets it off., f 37;
#X text 167 233 non-zero sets sustain mode to stack mode \, zero sets it off., f 37;
#X restore 383 17 pd reference;
#X text 477 17 <= click;
#X obj 9 510 cnv 1 550 1 empty empty empty 8 12 0 13 #000000 #000000 0;
#X text 249 230 <-- emulating note on/off messages;
#X obj 64 201 tgl 21 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 64;
#X obj 104 416 route 1 2 3 4, f 39;
#X listbox 104 444 7 0 0 0 - - - 0;
#X obj 104 471 print v1;
#X listbox 171 444 7 0 0 0 - - - 0;
#X listbox 239 444 7 0 0 0 - - - 0;
#X listbox 306 444 7 0 0 0 - - - 0;
#X obj 171 471 print v2;
#X obj 239 471 print v3;
#X obj 306 471 print v4;
#N canvas 662 49 425 614 clone 0;
#X listbox 210 378 13 0 0 0 - - - 0;
#X obj 210 347 pack f f f;
#X obj 210 447 output~;
#X obj 60 436 declare -stdpath ./, f 11;
#X obj 210 411 clone -s 1 clone-abs-c 4;
#X obj 210 313 poly 4 1, f 10;
#X obj 210 252 makenote 55 1500;
#X msg 177 184 60;
#X msg 210 184 62;
#X msg 247 184 65;
#X msg 288 184 69;
#X floatatom 210 222 5 0 0 0 - - - 0;
#X obj 223 279 notein;
#X text 33 101 An approach that is more useful in this case is to use [clone] to load copies of an abstraction \, see below. Here we use [makenote] but you can also try your MIDI keyboard input with [notein]., f 50;
#X text 65 532 In [clone] \, we use the "-s" flag to set the starting copy number to 1 \, so it matches the voice numbers from [poly] (which is indexed from 1)., f 43;
#X text 33 18 You'll usually want [poly] to control many copies (or multiple voices) of the same polyphonic synth patch. The "route" method shown in the parent patch would then imply that you'd have the same subpatch or abstraction taking the note message., f 50;
#X msg 128 263 resize \$1;
#X floatatom 128 236 5 1 8 0 - - - 0;
#X text 33 198 resize both number of voices in [poly] and [clone], f 19;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 4 0 2 0;
#X connect 5 0 1 0;
#X connect 5 1 1 1;
#X connect 5 2 1 2;
#X connect 6 0 5 0;
#X connect 6 1 5 1;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 11 0;
#X connect 10 0 11 0;
#X connect 11 0 6 0;
#X connect 12 0 5 0;
#X connect 12 1 5 1;
#X connect 16 0 5 0;
#X connect 16 0 4 0;
#X connect 17 0 16 0;
#X restore 422 426 pd clone;
#X text 178 327 <-- first argument \, number of voices second;
#X text 207 343 argument selects voice stealing;
#X obj 221 523 clone;
#X obj 163 522 notein;
#X text 40 62 The [poly] object takes pitch in the left inlet and velocity in the right inlet \, but the example here takes a list input \, which gets spread at inlets (as is common in Pd). The output is voice number (left outlet) \, pitch (mid outlet) and velocity (right outlet)., f 68;
#X text 39 125 You can pack the output and use the [route] object to route messages to different voices (as below) or feed it [clone] (see example in [pd clone]). The [poly] object can be configured to do voice stealing with the 2nd argument (the default is 'no stealing')., f 68;
#X msg 64 231 72 \$1;
#X msg 111 231 74 \$1;
#X msg 158 231 77 \$1;
#X msg 206 231 81 \$1;
#N canvas 661 49 444 661 monophonic 0;
#X obj 200 466 output~;
#X obj 208 252 notein;
#X obj 200 366 osc~;
#X obj 200 405 *~;
#X obj 200 330 mtof;
#X obj 246 428 pow~ 4;
#X obj 246 323 / 127;
#X obj 246 389 line~;
#X msg 246 353 \$1 150;
#X obj 269 143 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 64;
#X obj 127 143 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 64;
#X obj 174 143 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 64;
#X obj 221 143 tgl 19 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 64;
#X msg 127 169 72 \$1;
#X msg 221 169 77 \$1;
#X msg 269 169 81 \$1;
#X listbox 174 219 10 0 0 0 - - - 0;
#X msg 174 169 74 \$1;
#X text 59 560 Note however that some monophonic synths may have a more sophisticated management where it goes back to the previously pressed key (if you're still pressing it) \, but [poly] can only manage this in a much simpler way., f 45;
#X text 265 245 you can also try your MIDI keyboard., f 19;
#X text 33 19 If you set [poly] to a single voice and voice stealing you can make it manage a monophonic synth. Without this minimum management you may end up getting undesired note off messages from releasing keys that were previously pressed instead of the note offs from the currently sounding key pressed for last., f 51;
#X msg 98 249 steal \$1;
#X obj 174 286 poly 1, f 8;
#X obj 98 216 tgl 21 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X text 28 191 set to voice stealing, f 12;
#X connect 1 0 22 0;
#X connect 1 1 22 1;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 4 0 2 0;
#X connect 5 0 3 1;
#X connect 6 0 8 0;
#X connect 7 0 5 0;
#X connect 8 0 7 0;
#X connect 9 0 15 0;
#X connect 10 0 13 0;
#X connect 11 0 17 0;
#X connect 12 0 14 0;
#X connect 13 0 16 0;
#X connect 14 0 16 0;
#X connect 15 0 16 0;
#X connect 16 0 22 0;
#X connect 17 0 16 0;
#X connect 21 0 22 0;
#X connect 22 1 4 0;
#X connect 22 2 6 0;
#X connect 23 0 21 0;
#X restore 422 397 pd monophonic;
#X text 339 525 updated for Pd version 0.56;
#X obj 206 201 tgl 21 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 64;
#X obj 111 201 tgl 21 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 64;
#X obj 158 201 tgl 21 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000 0 64;
#N canvas 737 98 425 614 sustain 0;
#X listbox 131 406 13 0 0 0 - - - 0;
#X obj 131 375 pack f f f;
#X obj 131 515 output~;
#X obj 131 479 clone -s 1 clone-abs-c 4;
#X msg 63 182 60;
#X msg 96 182 62;
#X msg 133 182 65;
#X msg 174 182 69;
#X floatatom 96 220 5 0 0 0 - - - 0;
#X obj 131 277 notein;
#X msg 237 243 sustain \$1;
#X msg 256 298 stack \$1;
#X obj 256 271 tgl 21 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X obj 237 211 tgl 21 0 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X obj 154 443 print sustain;
#X obj 131 341 poly 4 1, f 10;
#X obj 96 250 makenote 55 5000;
#X text 35 36 There's a sustain mode for [poly] \, so note offs are held until you set it off. The 'stack' message only affects the sustain mode. By default \, repeated notes are stacked and not freed. A "stack 0" message frees the note before repeating it., f 51;
#X connect 0 0 3 0;
#X connect 0 0 14 0;
#X connect 1 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 8 0;
#X connect 5 0 8 0;
#X connect 6 0 8 0;
#X connect 7 0 8 0;
#X connect 8 0 16 0;
#X connect 9 0 15 0;
#X connect 9 1 15 1;
#X connect 10 0 15 0;
#X connect 11 0 15 0;
#X connect 12 0 11 0;
#X connect 13 0 10 0;
#X connect 15 0 1 0;
#X connect 15 1 1 1;
#X connect 15 2 1 2;
#X connect 16 0 15 0;
#X connect 16 1 15 1;
#X restore 422 455 pd sustain;
#X connect 3 0 8 0;
#X connect 3 1 8 1;
#X connect 3 2 8 2;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 7 0 17 0;
#X connect 8 0 7 0;
#X connect 16 0 33 0;
#X connect 17 0 18 0;
#X connect 17 1 20 0;
#X connect 17 2 21 0;
#X connect 17 3 22 0;
#X connect 18 0 19 0;
#X connect 20 0 23 0;
#X connect 21 0 24 0;
#X connect 22 0 25 0;
#X connect 33 0 3 0;
#X connect 34 0 3 0;
#X connect 35 0 3 0;
#X connect 36 0 3 0;
#X connect 39 0 36 0;
#X connect 40 0 34 0;
#X connect 41 0 35 0;
