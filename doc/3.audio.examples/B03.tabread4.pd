#N canvas 376 88 777 630 12;
#X declare -stdpath ./;
#N canvas 0 0 450 300 (subpatch) 0;
#X array waveform12 131 float 1;
#A 0 -0.172615 -0.172615 -0.172615 -0.172615 -0.172615 -0.141231 -0.109846 -0.0941538 -0.0627692 -0.0470769 0.0156923 0.0784615 0.125538 0.188308 0.235385 0.298154 0.360923 0.392308 0.470769 0.533538 0.596308 0.643385 0.674769 0.721846 0.753231 0.784615 0.816 0.831692 0.847385 0.878769 0.894462 0.910154 0.910154 0.910154 0.910154 0.910154 0.894462 0.894462 0.894462 0.894462 0.878769 0.863077 0.816 0.800308 0.768923 0.737538 0.706154 0.674769 0.643385 0.596308 0.564923 0.533538 0.470769 0.423692 0.376615 0.313846 0.266769 0.204 0.172615 0.109846 0.0627692 0.0156923 0 -0.0313846 -0.0627692 -0.0784615 -0.0941538 -0.109846 -0.141231 -0.156923 -0.172615 -0.204 -0.219692 -0.219692 -0.235385 -0.235385 -0.235385 -0.219692 -0.219692 -0.219692 -0.204 -0.156923 -0.125538 -0.0784615 0 0.172615 0.313846 0.470769 0.564923 0.627692 0.690462 0.721846 0.737538 0.753231 0.768923 0.768923 0.753231 0.737538 0.706154 0.674769 0.612 0.580615 0.549231 0.517846 0.486462 0.423692 0.392308 0.360923 0.282462 0.219692 0.109846 -0.0156923 -0.0941538 -0.109846 -0.141231 -0.156923 -0.172615 -0.188308 -0.204 -0.204 -0.219692 -0.204 -0.204 -0.219692 -0.219692 -0.204 -0.204 -0.204 -0.204 -0.204 -0.188308;
#X coords 0 1.02 130 -1.02 258 130 1;
#X restore 392 40 graph;
#X text 67 14 WAVETABLE OSCILLATORS;
#X obj 156 106 phasor~;
#X obj 156 195 tabread4~ waveform12;
#X obj 156 168 +~ 1;
#X floatatom 156 77 6 0 0 0 - - - 0;
#X floatatom 250 67 6 0 1000 0 - - - 0;
#X obj 250 115 line~;
#X obj 156 142 *~;
#X text 51 92 phase;
#X text 51 128 range;
#X text 250 46 squeeze;
#X text 133 51 frequency;
#N canvas 0 0 450 300 (subpatch) 0;
#X array wave-out12 441 float 0;
#X coords 0 1 440 -1 300 140 1;
#X restore 391 200 graph;
#X obj 197 267 tabwrite~ wave-out12;
#X text 125 373 The tabread4~ module is available for situations requiring more control than tabosc4~ offers. The relationship between the two is the same as between cos~ and osc~ \, although the units are different between cos~ and tabread4~. Cos~ assumes input is normalized from 0 to 1 (and will wrap around as needed.) Tabread4~ takes values from 1 to n-2 where n is the number of points in the table-- for a 259-point table such as we have here \, it's 1 to 129 (so the "good" segment is 128 samples long.), f 77;
#X text 126 483 You would use tabread4~ (as opposed to tabosc4~) if you need direct control of the phase \, for instance if you to advance nonlinearly through the table. In the case shown here \, the "squeeze" factor makes the phase grow to a value at least \, and possibly much greater than \, 129 (to which tabread4~ then limits it). So the resulting waveform is compressed in time., f 77;
#X obj 250 139 +~ 128;
#X text 531 580 updated for Pd version 0.37;
#X text 50 143 adjustment =>;
#X text 50 107 generation =>;
#X obj 98 280 output~;
#X obj 214 314 declare -stdpath ./;
#X obj 197 231 bng 19 250 50 0 empty empty empty 17 7 0 10 #dfdfdf #000000 #000000;
#X text 220 230 <-- click to graph;
#X obj 250 91 pack f 50;
#X connect 2 0 8 0;
#X connect 3 0 14 0;
#X connect 3 0 21 1;
#X connect 3 0 21 0;
#X connect 4 0 3 0;
#X connect 5 0 2 0;
#X connect 6 0 25 0;
#X connect 7 0 17 0;
#X connect 8 0 4 0;
#X connect 17 0 8 1;
#X connect 23 0 14 0;
#X connect 25 0 7 0;
