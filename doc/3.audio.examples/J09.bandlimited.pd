#N canvas 353 23 896 639 12;
#X declare -stdpath ./;
#X floatatom 229 200 8 0 0 0 - - - 0;
#X obj 116 507 -~;
#X obj 229 289 /~;
#X obj 247 261 clip~ 1 999999;
#X obj 134 250 phasor~;
#X obj 146 321 *~;
#X obj 146 358 clip~ -0.5 0.5;
#X floatatom 134 206 8 0 0 0 - - - 0;
#X floatatom 229 143 8 0 0 0 - - - 0;
#X obj 229 171 mtof;
#X text 290 105 band limit (MIDI units), f 13;
#X obj 229 75 loadbang;
#X obj 146 385 *~ 1000;
#X obj 146 412 +~ 501;
#X obj 134 278 -~ 0.5;
#X text 191 508 graph output;
#X obj 134 153 samplerate~;
#X obj 134 180 / 512;
#N canvas 410 243 591 338 fft 0;
#X obj 43 40 inlet~;
#X obj 43 80 rfft~;
#X obj 43 113 *~;
#X obj 75 113 *~;
#X obj 75 156 sqrt~;
#X obj 75 190 expr~ 50 + 20 * log($v1)/log(10);
#X obj 75 224 max~ 0;
#X obj 176 102 block~ 512;
#X obj 75 258 tabsend~ \$0-fft;
#X floatatom 371 133 5 0 0 0 - - - 0;
#X floatatom 371 184 9 0 0 0 - - - 0;
#X obj 371 158 tabread \$0-fft;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 2 1;
#X connect 1 1 3 0;
#X connect 1 1 3 1;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 8 0;
#X connect 9 0 11 0;
#X connect 11 0 10 0;
#X restore 149 582 pd fft;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-fft 256 float 1;
#A 0 2.16508 88.2211 82.1996 78.6756 76.1744 74.2324 72.6448 71.3006 70.1353 69.1054 68.1832 67.347 66.5828 65.8777 65.2241 64.6135 64.0416 63.5023 62.9931 62.5094 62.0497 61.6105 61.191 60.7882 60.4018 60.0293 59.6707 59.3238 58.9888 58.6638 58.3491 58.043 57.7461 57.4565 57.175 56.9 56.6323 56.3703 56.1148 55.8644 55.62 55.38 55.1456 54.9152 54.6898 54.4681 54.2511 54.0374 53.8281 53.6218 53.4197 53.2203 53.0248 52.832 52.6428 52.4561 52.2729 52.0919 51.9144 51.7389 51.5668 51.3967 51.2297 51.0647 50.9028 50.7426 50.5856 50.4302 50.2779 50.1272 49.9795 49.8334 49.6901 49.5485 49.4097 49.2724 49.138 49.005 48.8748 48.7461 48.6202 48.4957 48.374 48.2536 48.136 48.0198 47.9062 47.7941 47.6846 47.5764 47.4708 47.3666 47.265 47.1647 47.0669 46.9704 46.8765 46.7838 46.6936 46.6045 46.518 46.4325 46.3496 46.2677 46.1882 46.1097 46.0336 45.9585 45.8856 45.8137 45.744 45.6752 45.6085 45.5427 45.4789 45.4159 45.3549 45.2947 45.2363 45.1786 45.1226 45.0673 45.0137 44.9606 44.9091 44.8581 44.8086 44.7595 44.7118 44.6644 44.6183 44.5724 44.5278 44.4833 44.44 44.3966 44.3543 44.312 44.2706 44.229 44.1883 44.1473 44.1071 44.0666 44.0266 43.9863 43.9465 43.9062 43.8664 43.8259 43.7857 43.7449 43.7043 43.6629 43.6216 43.5795 43.5374 43.4943 43.4511 43.4069 43.3625 43.317 43.2712 43.2241 43.1766 43.1278 43.0785 43.0279 42.9765 42.9237 42.8702 42.8151 42.7591 42.7014 42.6428 42.5825 42.521 42.4577 42.3932 42.3267 42.2589 42.189 42.1177 42.0442 41.9692 41.8918 41.8127 41.7312 41.6479 41.562 41.4741 41.3835 41.2908 41.1952 41.0974 40.9965 40.8931 40.7866 40.6774 40.5648 40.4494 40.3303 40.2082 40.0823 39.9531 39.8197 39.6828 39.5416 39.3964 39.2466 39.0926 38.9336 38.7699 38.6009 38.4269 38.247 38.0616 37.8698 37.672 37.4672 37.2556 37.0365 36.8098 36.5747 36.3312 36.0783 35.8159 35.5429 35.2591 34.9633 34.6551 34.3331 33.9967 33.6443 33.2749 32.8867 32.4782 32.047 31.5913 31.1077 30.5935 30.0444 29.4561 28.8223 28.1365 27.3892 26.5693 25.6612 24.6446 23.4903 22.1563 20.5767 18.642 16.1457 12.6259 6.60629;
#X coords 0 100 255 0 200 140 1;
#X restore 657 438 graph;
#X obj 58 555 output~;
#X obj 146 439 tabread4~ \$0-transition;
#X obj 229 229 * 0.4;
#X msg 229 113 136.766;
#X obj 167 547 tabwrite~ \$0-out;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-out 882 float 0;
#X coords 0 1 882 -1 200 140 1;
#X restore 438 436 graph;
#X text 51 26 BAND-LIMITED SAWTOOTH GENERATOR USING A TRANSITION TABLE;
#N canvas 271 23 943 585 transition-table 0;
#X obj 761 173 cos~;
#X obj 668 173 cos~;
#X obj 620 173 cos~;
#X text 285 231 back the phase up one sample;
#X msg 756 69 -0.0005;
#X obj 668 144 *~ 3;
#X obj 761 144 *~ 5;
#X obj 668 203 *~ 0.33333;
#X obj 761 203 *~ -0.2;
#X obj 620 203 *~ -1;
#X obj 668 95 phasor~ 22.05;
#X obj 668 246 *~ 0.57692;
#X obj 241 353 cos~;
#X obj 193 348 cos~;
#X msg 280 262 -0.0005;
#X obj 241 327 *~ 3;
#X obj 241 379 *~ 0.33333;
#X obj 193 379 *~ -1;
#X obj 192 287 phasor~ 22.05;
#X obj 241 419 *~ 0.75;
#X obj 668 288 tabwrite~ \$0-transition;
#X obj 241 476 tabwrite~ \$0-transition;
#X obj 137 162 loadbang;
#X text 335 309 twice the table length;
#X text 323 286 period is 2000 samples \,;
#X text 117 514 This one is used - first and third harmonics only.;
#X text 550 322 This alternate one puts in harmonics 1 \, 3 \, and 5;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-transition 1002 float 0;
#X coords 0 1 1002 -1 200 140 1;
#X restore 582 390 graph;
#X text 596 537 ----- 1002 samples ----;
#X text 94 86 Logically the half-cycle is in samples 1 through 1000 samples 0 and 1001 are provided so that the 4-point interpolation will work everywhere., f 54;
#X obj 137 204 bng 19 250 50 0 empty empty empty 0 -6 0 8 #dfdfdf #000000 #000000;
#X obj 137 417 bng 19 250 50 0 empty empty empty 0 -6 0 8 #dfdfdf #000000 #000000;
#X obj 564 204 bng 19 250 50 0 empty empty empty 0 -6 0 8 #dfdfdf #000000 #000000;
#X obj 564 30 bng 19 250 50 0 empty empty empty 0 -6 0 8 #dfdfdf #000000 #000000;
#X text 95 49 This network puts a half cycle of a band-limited square wave into the table "\$0-transition.", f 54;
#X connect 0 0 8 0;
#X connect 1 0 7 0;
#X connect 2 0 9 0;
#X connect 4 0 10 1;
#X connect 5 0 1 0;
#X connect 6 0 0 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 11 0;
#X connect 10 0 2 0;
#X connect 10 0 5 0;
#X connect 10 0 6 0;
#X connect 11 0 20 0;
#X connect 12 0 16 0;
#X connect 13 0 17 0;
#X connect 14 0 18 1;
#X connect 15 0 12 0;
#X connect 16 0 19 0;
#X connect 17 0 19 0;
#X connect 18 0 13 0;
#X connect 18 0 15 0;
#X connect 19 0 21 0;
#X connect 22 0 30 0;
#X connect 30 0 14 0;
#X connect 30 0 31 0;
#X connect 31 0 21 0;
#X connect 32 0 20 0;
#X connect 33 0 4 0;
#X connect 33 0 32 0;
#X restore 262 397 pd transition-table;
#X text 662 600 updated for Pd version 0.39;
#X text 434 317 The "band limit" controls how fast the transition table is read. If it is set to the Nyquist frequency the table is read at 0.4 times the Nyquist \, or five samples a cycle. Lowering the band limit cuts off the partials of the generated sawtooth wave at frequencies below the Nyquist., f 60;
#X obj 710 25 declare -stdpath ./;
#X obj 167 509 bng 19 250 50 0 empty empty empty 0 -6 0 8 #dfdfdf #000000 #000000;
#X obj 134 124 bng 19 250 50 0 empty empty empty 0 -6 0 8 #dfdfdf #000000 #000000;
#X text 433 73 A more sophisticated way to control foldover in sawtooth waves is to replace the once-a-cycle jump with a bandlimited transition. To get a band-limited transition we synthesize a band-limited square wave and harvest the transition from the middle of the top half to the middle of the bottom half. Here we use a square wave at SR/10 \, so that only partials 1 and 3 fit below the Nyquist. The transition should take 1/2 period \, or 5 samples. The table is calculated and stored in the "transition-table" subpatch.;
#X text 434 209 Now any time we wish to make a discontinuity in the output signal \, we make it look exactly like the bandlimited square wave looks. We do this by reading through the table we recorded \, carefully adding a "digital" \, non-band-limited \, sawtooth to "\$0-transition" so that the discontinuities in the two cancel out and what you have left is the transition in the table., f 60;
#X connect 0 0 22 0;
#X connect 1 0 18 0;
#X connect 1 0 20 0;
#X connect 1 0 20 1;
#X connect 1 0 24 0;
#X connect 2 0 5 1;
#X connect 3 0 2 1;
#X connect 4 0 14 0;
#X connect 5 0 6 0;
#X connect 6 0 12 0;
#X connect 7 0 4 0;
#X connect 7 0 3 0;
#X connect 8 0 9 0;
#X connect 9 0 0 0;
#X connect 11 0 23 0;
#X connect 11 0 32 0;
#X connect 12 0 13 0;
#X connect 13 0 21 0;
#X connect 14 0 5 0;
#X connect 14 0 1 1;
#X connect 16 0 17 0;
#X connect 17 0 7 0;
#X connect 21 0 1 0;
#X connect 22 0 2 0;
#X connect 23 0 8 0;
#X connect 31 0 24 0;
#X connect 32 0 16 0;
