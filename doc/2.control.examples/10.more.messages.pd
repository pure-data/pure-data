#N canvas 526 23 530 672 12;
#X obj 240 414 print;
#X msg 107 112 3 \, 4 \, 5;
#X msg 88 85 3 4 5;
#X msg 86 386 3 \$1 5;
#X floatatom 86 359 4 0 0 0 - - - 0;
#X msg 240 388 \$2 \$1 5;
#X msg 240 363 45 67;
#X msg 318 363 45 67;
#X floatatom 82 517 4 0 0 0 - - - 0;
#X floatatom 157 517 4 0 0 0 - - - 0;
#X floatatom 338 235 4 0 0 0 - - - 0;
#X floatatom 192 238 4 0 0 0 - - - 0;
#X obj 192 211 receive number9;
#X obj 338 211 receive 9bis;
#X obj 107 201 print;
#X text 46 18 In addition to using semicolons to separate messages
\, you can use commas \, which continue a stream of messages to the
same destination. Thus:;
#X msg 128 139 3 \; number9 5 \; 9bis 45;
#X text 293 626 updated for Pd version 0.34;
#X msg 318 388 \; number9 \$1 \; 9bis \$2;
#X text 44 271 You can use "\$1" \, etc. \, as variables in messages.
Send the message box a list whose elements supply the values. A number
is just a list with one element.;
#X obj 86 412 print;
#X text 80 338 one variable:;
#X text 245 336 two variables:;
#X obj 82 623 print;
#X floatatom 233 517 4 0 0 0 - - - 0;
#X msg 82 588 cis \$1 \, boom \$2 \, bah \$3;
#X text 133 83 <= one message: the list \, "3 4 5".;
#X text 171 111 <= three separate messages;
#X text 211 141 <= three separate messages \, with three destinations.
, f 27;
#X obj 82 547 pack float float float;
#X text 61 450 But to really exploit the possibilities using multiple
variables \, you will need the [pack] object to get two or more values
into the same message:;
#X text 246 546 <-- number of creation arguments, f 32;
#X text 274 563 sets the number of inlets.;
#X connect 1 0 14 0;
#X connect 2 0 14 0;
#X connect 3 0 20 0;
#X connect 4 0 3 0;
#X connect 5 0 0 0;
#X connect 6 0 5 0;
#X connect 7 0 18 0;
#X connect 8 0 29 0;
#X connect 9 0 29 1;
#X connect 12 0 11 0;
#X connect 13 0 10 0;
#X connect 16 0 14 0;
#X connect 24 0 29 2;
#X connect 25 0 23 0;
#X connect 29 0 25 0;
